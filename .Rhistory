x=1+1
x
install.packages("rmarkdown")
library(dplyr)
install.packages(ggplot2)
install.packages("ggplot2)
exit
end
;
library(ggplot2)
library("ggplot2")
library("ggplot2")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("ggrepel")
library(dplyr)
library(ggrepel)
library(ggrepel)
library(ggplot2)
datos <- read.csv("~/Documents/UEM/Modulo_3/G2P/out/Plink_snps2.qassoc", sep="")
datos
snpsOfInterest<-subset(datos, datos$P<=9.0e-04)
don <- datos %>%
# Primero computo el tamaño del cromosoma.
group_by(CHR) %>%
summarise(chr_len=max(BP)) %>%
# Calculo la posicion acumulatica en cada cromosoma
mutate(tot=cumsum(chr_len)-chr_len) %>%
select(-chr_len) %>%
# añado esta informacion a la base de datos original
left_join(datos, ., by=c("CHR"="CHR")) %>%
# Añado la posicion acumulativa de cada SNP
arrange(CHR, BP) %>%
mutate( BPcum=BP+tot) %>%
# Añado los SNP de interes
mutate( is_highlight=ifelse(SNP %in% snpsOfInterest, "yes", "no")) %>%
mutate( is_annotate=ifelse(-log10(P)>4, "yes", "no"))
# Preparo ahora el eje de las x
axisdf <- don %>% group_by(CHR) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
ggplot(don, aes(x=BPcum, y=-log10(P))) +
# Primero represento todos los puntos
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3) +
scale_color_manual(values = rep(c("grey", "skyblue"), 22 )) +
# Adapto el eje de las X:
scale_x_continuous( label = axisdf$CHR, breaks= axisdf$center ) +
scale_y_continuous(expand = c(0, 0) ) +     # remove space between plot area and x axis
# Añado los SNP de interes
geom_point(data=subset(don, is_highlight=="yes"), color="orange", size=2) +
geom_label_repel( data=subset(don, is_annotate=="yes"), aes(label=SNP), size=2) +
# Lo pongo bonito
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
windows()
qqplot(datos$P)
View(datos)
View(datos)
min(datos$P)
dat<-subset(datos, datos$P>1.0e-20)
windows()
qqplot(dat$P)
qqPlot(dat$P)
install.packages("car")
qqPlot(datos$P)
datos <- read.csv("~/Documents/UEM/Modulo_3/G2P/out/Plink_snps1.qassoc", sep="")
View(datos)
datos <- read.csv("~/Documents/UEM/Modulo_3/G2P/out/Plink_snps1.qassoc", sep="")
snpsOfInterest<-subset(datos, datos$P<=9.0e-04)
don <- datos %>%
# Primero computo el tamaño del cromosoma.
group_by(CHR) %>%
summarise(chr_len=max(BP)) %>%
# Calculo la posicion acumulatica en cada cromosoma
mutate(tot=cumsum(chr_len)-chr_len) %>%
select(-chr_len) %>%
# añado esta informacion a la base de datos original
left_join(datos, ., by=c("CHR"="CHR")) %>%
# Añado la posicion acumulativa de cada SNP
arrange(CHR, BP) %>%
mutate( BPcum=BP+tot) %>%
# Añado los SNP de interes
mutate( is_highlight=ifelse(SNP %in% snpsOfInterest, "yes", "no")) %>%
mutate( is_annotate=ifelse(-log10(P)>4, "yes", "no"))
# Preparo ahora el eje de las x
axisdf <- don %>% group_by(CHR) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
ggplot(don, aes(x=BPcum, y=-log10(P))) +
# Primero represento todos los puntos
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3) +
scale_color_manual(values = rep(c("grey", "skyblue"), 22 )) +
# Adapto el eje de las X:
scale_x_continuous( label = axisdf$CHR, breaks= axisdf$center ) +
scale_y_continuous(expand = c(0, 0) ) +     # remove space between plot area and x axis
# Añado los SNP de interes
geom_point(data=subset(don, is_highlight=="yes"), color="orange", size=2) +
geom_label_repel( data=subset(don, is_annotate=="yes"), aes(label=SNP), size=2) +
# Lo pongo bonito
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
datos <- read.csv("~/Documents/UEM/Modulo_3/G2P/out/Plink_snps10.qassoc", sep="")
snpsOfInterest<-subset(datos, datos$P<=9.0e-04)
don <- datos %>%
# Primero computo el tamaño del cromosoma.
group_by(CHR) %>%
summarise(chr_len=max(BP)) %>%
# Calculo la posicion acumulatica en cada cromosoma
mutate(tot=cumsum(chr_len)-chr_len) %>%
select(-chr_len) %>%
# añado esta informacion a la base de datos original
left_join(datos, ., by=c("CHR"="CHR")) %>%
# Añado la posicion acumulativa de cada SNP
arrange(CHR, BP) %>%
mutate( BPcum=BP+tot) %>%
# Añado los SNP de interes
mutate( is_highlight=ifelse(SNP %in% snpsOfInterest, "yes", "no")) %>%
mutate( is_annotate=ifelse(-log10(P)>4, "yes", "no"))
# Preparo ahora el eje de las x
axisdf <- don %>% group_by(CHR) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
ggplot(don, aes(x=BPcum, y=-log10(P))) +
# Primero represento todos los puntos
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3) +
scale_color_manual(values = rep(c("grey", "skyblue"), 22 )) +
# Adapto el eje de las X:
scale_x_continuous( label = axisdf$CHR, breaks= axisdf$center ) +
scale_y_continuous(expand = c(0, 0) ) +     # remove space between plot area and x axis
# Añado los SNP de interes
geom_point(data=subset(don, is_highlight=="yes"), color="orange", size=2) +
geom_label_repel( data=subset(don, is_annotate=="yes"), aes(label=SNP), size=2) +
# Lo pongo bonito
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
datos <- read.csv("~/Documents/UEM/Modulo_3/G2P/out/Plink_snps2.qassoc", sep="")
snpsOfInterest<-subset(datos, datos$P<=9.0e-04)
don <- datos %>%
# Primero computo el tamaño del cromosoma.
group_by(CHR) %>%
summarise(chr_len=max(BP)) %>%
# Calculo la posicion acumulatica en cada cromosoma
mutate(tot=cumsum(chr_len)-chr_len) %>%
select(-chr_len) %>%
# añado esta informacion a la base de datos original
left_join(datos, ., by=c("CHR"="CHR")) %>%
# Añado la posicion acumulativa de cada SNP
arrange(CHR, BP) %>%
mutate( BPcum=BP+tot) %>%
# Añado los SNP de interes
mutate( is_highlight=ifelse(SNP %in% snpsOfInterest, "yes", "no")) %>%
mutate( is_annotate=ifelse(-log10(P)>4, "yes", "no"))
# Preparo ahora el eje de las x
axisdf <- don %>% group_by(CHR) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
ggplot(don, aes(x=BPcum, y=-log10(P))) +
# Primero represento todos los puntos
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3) +
scale_color_manual(values = rep(c("grey", "skyblue"), 22 )) +
# Adapto el eje de las X:
scale_x_continuous( label = axisdf$CHR, breaks= axisdf$center ) +
scale_y_continuous(expand = c(0, 0) ) +     # remove space between plot area and x axis
# Añado los SNP de interes
geom_point(data=subset(don, is_highlight=="yes"), color="orange", size=2) +
geom_label_repel( data=subset(don, is_annotate=="yes"), aes(label=SNP), size=2) +
# Lo pongo bonito
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
View(datos)
View(datos)
View(don)
View(don)
View(snpsOfInterest)
View(snpsOfInterest)
View(don)
View(snpsOfInterest)
View(don)
View(snpsOfInterest)
View(don)
if (!requireNamespace("BiocManager", quietly=TRUE)){install.packages("BiocManager")}
if (!requireNamespace("edgeR", quietly=TRUE)){BiocManager::install("edgeR")}
if (!requireNamespace("tidyverse", quietly=TRUE)){install.packages("tidyverse")}
if (!requireNamespace("caret", quietly=TRUE)){install.packages("caret")}
if (!requireNamespace("MammaPrintData", quietly=TRUE)){install.packages("MammaPrintData")}
if (!requireNamespace("tidyverse", quietly=TRUE)){install.packages("tidyverse")}
BiocManager::install("hipathia")
library(singleCellTK)
BiocManager::install("singleCellTK")
BiocManager::install("singleCellTK", force=TRUE)
library(singleCellTK)
BiocManager::install("scuttle")
library(scuttle)
library(singleCellTK)
?singleCellTK
?convertGeneIDs
??convertGeneIDs
if (!requireNamespace("BiocManager", quietly=TRUE)){install.packages("BiocManager")}
if (!requireNamespace("edgeR", quietly=TRUE)){BiocManager::install("edgeR")}
if (!requireNamespace("tidyverse", quietly=TRUE)){install.packages("tidyverse")}
if (!requireNamespace("org.Hs.eg.db", quietly=TRUE)){BiocManager::install("org.Hs.eg.db")}
library(edgeR)
library(BiocManager)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(genefu)
BiocManager::install("hipathia")
library(edgeR)
library(BiocManager)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(genefu)
library(tidyverse)
library(hipathia)
library(dplyr)
library(scuttle)
library(singleCellTK)
genexp <- read.delim(file="./Raw_Data/GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_reads.gct", skip=2)
setwd("~/Documents/GitHub/TFM")
genexp <- read.delim(file="./Raw_Data/GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_reads.gct", skip=2)
dim(genexp)
genexp1<-genexp[,-2]   #elimina la columna description
sum(duplicated(genexp1$Name))
rownames(genexp1)<-genexp1$Name
snames<-colnames(genexp1[,-1])
genexp2<-genexp1[,snames]
y<-DGEList(genexp2)
str(y)
y_norm<-calcNormFactors(y, method = "TMM")
y_norm1 <- cpm(y_norm, log=T)
y_norm1<- y_norm1[1:100,1:200]
trans_data <- translate_data(y_norm1, "hsa")
exp_data <- normalize_data(trans_data)
pathways <- hipathia::load_pathways("hsa")
results <- hipathia(exp_data, pathways, decompose = FALSE, verbose=FALSE)
path_vals <- get_paths_data(results, matrix = TRUE)
norm_paths<-normalize_paths(path_vals, pathways)
str(norm_paths)
norm_paths_entrezgene = convertGeneIDs(inSCE="", inSymbol="entrezgene", outSymbol="symbol", database="org.Hs.eg.db")
??convertGeneIDs
??biothings_client
pathways
View(pathways)
pathways_1 <- load_pathways(species = "hsa", pathways_list = c("hsa03460")
)
report <- create_report(comp, pathways_1, "save_results")
report <- create_report(y_norm1, pathways, "save_results")
report <- create_report(y_norm1, pathways_1, "save_results")
?create_report
report <- create_report(pathways_1, "save_results")
plotVG("hsa03460", pathways)
install.packages("visNetwork")
install.packages("visNetwork")
install.packages("visNetwork")
library("visNetwork")
library(hipathia)
pathways <- hipathia::load_pathways("hsa")
plotVG("hsa03460", pathways)
library("visNetwork")
plotVG("hsa03460", pathways)
source("http://bioconductor.org/biocLite.R")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")biocLite( c("pathview", "gage", "gageData") )
install.packages("BiocManager")biocLite( c("pathview", "gage", "gageData") )
BiocManager::install("pathview")
library("pathview")
pathview(gene.data=NULL, pathway.id="hsa04110")
setwd("~/Documents/GitHub/TFM")
genexp <- read.delim(file="./Raw_Data/GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_reads.gct", skip=2)
shap <- fread("./Raw_Data/Disgenet_fanconi_anemia.tsv", header = T) %>% as.data.frame()
library(data.table)
gisgenet_AF <- fread("./Raw_Data/Disgenet_fanconi_anemia.tsv", header = T) %>% as.data.frame()
View(gisgenet_AF)
View(gisgenet_AF)
View(gisgenet_AF)
quit
exit
a
