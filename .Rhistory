scale_color_manual(values = rep(c("grey", "skyblue"), 22 )) +
# Adapto el eje de las X:
scale_x_continuous( label = axisdf$CHR, breaks= axisdf$center ) +
scale_y_continuous(expand = c(0, 0) ) +     # remove space between plot area and x axis
# Añado los SNP de interes
geom_point(data=subset(don, is_highlight=="yes"), color="orange", size=2) +
geom_label_repel( data=subset(don, is_annotate=="yes"), aes(label=SNP), size=2) +
# Lo pongo bonito
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
windows()
qqplot(datos$P)
View(datos)
View(datos)
min(datos$P)
dat<-subset(datos, datos$P>1.0e-20)
windows()
qqplot(dat$P)
qqPlot(dat$P)
install.packages("car")
qqPlot(datos$P)
datos <- read.csv("~/Documents/UEM/Modulo_3/G2P/out/Plink_snps1.qassoc", sep="")
View(datos)
datos <- read.csv("~/Documents/UEM/Modulo_3/G2P/out/Plink_snps1.qassoc", sep="")
snpsOfInterest<-subset(datos, datos$P<=9.0e-04)
don <- datos %>%
# Primero computo el tamaño del cromosoma.
group_by(CHR) %>%
summarise(chr_len=max(BP)) %>%
# Calculo la posicion acumulatica en cada cromosoma
mutate(tot=cumsum(chr_len)-chr_len) %>%
select(-chr_len) %>%
# añado esta informacion a la base de datos original
left_join(datos, ., by=c("CHR"="CHR")) %>%
# Añado la posicion acumulativa de cada SNP
arrange(CHR, BP) %>%
mutate( BPcum=BP+tot) %>%
# Añado los SNP de interes
mutate( is_highlight=ifelse(SNP %in% snpsOfInterest, "yes", "no")) %>%
mutate( is_annotate=ifelse(-log10(P)>4, "yes", "no"))
# Preparo ahora el eje de las x
axisdf <- don %>% group_by(CHR) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
ggplot(don, aes(x=BPcum, y=-log10(P))) +
# Primero represento todos los puntos
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3) +
scale_color_manual(values = rep(c("grey", "skyblue"), 22 )) +
# Adapto el eje de las X:
scale_x_continuous( label = axisdf$CHR, breaks= axisdf$center ) +
scale_y_continuous(expand = c(0, 0) ) +     # remove space between plot area and x axis
# Añado los SNP de interes
geom_point(data=subset(don, is_highlight=="yes"), color="orange", size=2) +
geom_label_repel( data=subset(don, is_annotate=="yes"), aes(label=SNP), size=2) +
# Lo pongo bonito
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
datos <- read.csv("~/Documents/UEM/Modulo_3/G2P/out/Plink_snps10.qassoc", sep="")
snpsOfInterest<-subset(datos, datos$P<=9.0e-04)
don <- datos %>%
# Primero computo el tamaño del cromosoma.
group_by(CHR) %>%
summarise(chr_len=max(BP)) %>%
# Calculo la posicion acumulatica en cada cromosoma
mutate(tot=cumsum(chr_len)-chr_len) %>%
select(-chr_len) %>%
# añado esta informacion a la base de datos original
left_join(datos, ., by=c("CHR"="CHR")) %>%
# Añado la posicion acumulativa de cada SNP
arrange(CHR, BP) %>%
mutate( BPcum=BP+tot) %>%
# Añado los SNP de interes
mutate( is_highlight=ifelse(SNP %in% snpsOfInterest, "yes", "no")) %>%
mutate( is_annotate=ifelse(-log10(P)>4, "yes", "no"))
# Preparo ahora el eje de las x
axisdf <- don %>% group_by(CHR) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
ggplot(don, aes(x=BPcum, y=-log10(P))) +
# Primero represento todos los puntos
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3) +
scale_color_manual(values = rep(c("grey", "skyblue"), 22 )) +
# Adapto el eje de las X:
scale_x_continuous( label = axisdf$CHR, breaks= axisdf$center ) +
scale_y_continuous(expand = c(0, 0) ) +     # remove space between plot area and x axis
# Añado los SNP de interes
geom_point(data=subset(don, is_highlight=="yes"), color="orange", size=2) +
geom_label_repel( data=subset(don, is_annotate=="yes"), aes(label=SNP), size=2) +
# Lo pongo bonito
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
datos <- read.csv("~/Documents/UEM/Modulo_3/G2P/out/Plink_snps2.qassoc", sep="")
snpsOfInterest<-subset(datos, datos$P<=9.0e-04)
don <- datos %>%
# Primero computo el tamaño del cromosoma.
group_by(CHR) %>%
summarise(chr_len=max(BP)) %>%
# Calculo la posicion acumulatica en cada cromosoma
mutate(tot=cumsum(chr_len)-chr_len) %>%
select(-chr_len) %>%
# añado esta informacion a la base de datos original
left_join(datos, ., by=c("CHR"="CHR")) %>%
# Añado la posicion acumulativa de cada SNP
arrange(CHR, BP) %>%
mutate( BPcum=BP+tot) %>%
# Añado los SNP de interes
mutate( is_highlight=ifelse(SNP %in% snpsOfInterest, "yes", "no")) %>%
mutate( is_annotate=ifelse(-log10(P)>4, "yes", "no"))
# Preparo ahora el eje de las x
axisdf <- don %>% group_by(CHR) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
ggplot(don, aes(x=BPcum, y=-log10(P))) +
# Primero represento todos los puntos
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3) +
scale_color_manual(values = rep(c("grey", "skyblue"), 22 )) +
# Adapto el eje de las X:
scale_x_continuous( label = axisdf$CHR, breaks= axisdf$center ) +
scale_y_continuous(expand = c(0, 0) ) +     # remove space between plot area and x axis
# Añado los SNP de interes
geom_point(data=subset(don, is_highlight=="yes"), color="orange", size=2) +
geom_label_repel( data=subset(don, is_annotate=="yes"), aes(label=SNP), size=2) +
# Lo pongo bonito
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
View(datos)
View(datos)
View(don)
View(don)
View(snpsOfInterest)
View(snpsOfInterest)
View(don)
View(snpsOfInterest)
View(don)
View(snpsOfInterest)
View(don)
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(groups),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options(targets))
setwd("~/Documents/GitHub/TFM")
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(groups),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options(targets))
library("dbparser")
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(groups),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options(targets))
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options())
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(gneral information),
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options("gneral information"),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options())
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(c("gneral information")),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options())
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(c(gneral information)),
?drug_node_options
?dbparser
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(list("gneral information")),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options())
list("gneral information")
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(drug_general_information),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options())
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options("drug_general_information"),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options())
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(list("drug_general_information")),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options())
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(list("drug_gneral_information")),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options())
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(c("drug_general_information")),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = cett_nodes_options())
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = NULL,
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = FALSE,
cett_options       = NULL)
View(drugbank)
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(c('drug_general_information')),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = cett_nodes_options())
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(c('general_information')),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = cett_nodes_options())
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(c('general_information')),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = cett_nodes_options(["targets"]))
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(c("groups")),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = cett_nodes_options(c("targets")))
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(list("groups")),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = cett_nodes_options(c("targets")))
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options("groups"),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = cett_nodes_options(c("targets")))
drug_node_options
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = cett_nodes_options(c("targets")))
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = cett_nodes_options("targets"))
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = cett_nodes_options(c("targets")))
AA<-c("targets")
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = drug_node_options(),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = cett_nodes_options(AA))
AA
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = NULL,
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = AA)
drugbank <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = c("groups"),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = c("targets"))
View(drugbank)
drugbank1 <- parseDrugBank(db_path            = "./Raw_Data/drugbank_all_full_database_v5.1.8.xml",
drug_options       = c("groups", "categories"),
parse_salts        = FALSE,
parse_products     = FALSE,
references_options = NULL,
cett_options       = c("targets"))
View(drugbank1)
View(drugbank1)
drug1 <- drugbank$drugs
View(drug1)
drug1 <- drugbank$drugs$groups
View(drug1)
drug_targets_ <- drugbank$cett$targets$general_information$known_action
drug1 <- drugbank$drugs$categories
View(drugbank)
drug1 <- drugbank1$drugs$categories
View(drug1)
View(drug1)
drug1 <- unique(drugbank1$drugs$categories$category)
driug1
drug1
drug1 <- drugbank1$drugs$categories$category=='target'
drug1
drug1 <- drugbank1$drugs$categories$category
drug1 <- drugbank1$drugs$categories
drug1[drug1$category=="target",]
View(drugbank1)
drugbank1[["drugs"]][["categories"]][["category"]]
drugbank1[["drugs"]][["categories"]][["category"=="target"]]
View(drug1)
drug1 <- drugbank1$drugs$groups
View(drug1)
drug_targets <- drugbank$cett$targets$general_information
View(drug_targets)
drug_group <- drugbank1$drugs$groups
View(drug_group)
drug_group <- drug_group %>% rename(`drugbank-id` = drugbank_id)
library(tidyverse)
drug_group <- drug_group %>% rename(`drugbank-id` = drugbank_id)
library(tidyverse)
drug_group <- drug_group %>% rename(`drugbank-id` = drugbank_id)
View(drug_group)
drug_group <- drug_group %>% rename(drugbank-id = drugbank_id)
?raname
?rename
library(dplyr)
drug_group <- drug_group %>% rename(drugbank-id = drugbank_id)
drug_group <- drug_group %>% rename(`drugbank-id` = drugbank_id)
drug_group <- drugbank1$drugs$groups
drug_group <- drug_group %>% rename(`drugbank-id` = drugbank_id)
drug_group <- drugbank1$drugs$groups$`drugbank-id`
drug_targets <- drug_targets %>% rename(parent_key = drugbank_id)
drug_group <- drug_group %>% rename(drugbank_id = `drugbank-id`)
drug_targets <- drug_targets %>% rename(drugbank_id = parent_key)
drug_group <- drug_group %>% rename(drugbank_id = `drugbank-id`)
names(drug_group)[names(drug_group) == `drugbank-id`] <- "Years_From_Diagnosis"
drug_group <- drugbank1$drugs$groups
View(drug_group)
names(drug_group)[names(drug_group) == `drugbank-id`] <- "Years_From_Diagnosis"
View(drug_group)
drug_group$new<-drug_group$`drugbank-id`
View(drug_group)
names(drug_group)[names(drug_group) == `drugbank-id`] <- "Years_From_Diagnosis"
drug_group <- drugbank1$drugs$groups
drug_group$drugbank_id<-drug_group$`drugbank-id`
View(drug_group)
drugbank1[["cett"]][["targets"]][["polypeptides"]][["external_identy"]][["resource"]]
drug_uniprot <- drugbank$cett$targets$polypeptides$external_identy
View(drug_uniprot)
drug_uniprot[drug_uniprot$resource=="UniProtKB",]
drug_uniprot <- drug_uniprot[drug_uniprot$resource=="UniProtKB",]
View(drug_uniprot)
View(drug_targets)
View(drug_uniprot)
View(drug_targets)
View(drug_uniprot)
drug_uniprot <- drug_uniprot %>% rename(parent_key = id)
drug_uniprot <- drug_uniprot %>% rename(id = parent_key)
View(drug_uniprot)
total <- merge(drug_targets,drug_uniprot,by="id")
View(total)
View(total)
?merge
total1 <- merge(drug_targets,drug_uniprot)
total <- merge(drug_targets,drug_uniprot)
View(total)
View(total1)
total <- merge(drug_targets,drug_uniprot,by="id")
View(total)
View(total)
View(drug_uniprot)
View(drug_targets)
View(drug_targets)
total <- merge(drug_group,drug_uniprot)
drug_targets2 <- merge(drug_targets,drug_uniprot)
drug_targets2 <- merge(drug_targets,drug_uniprot)
drugs <- merge(drug_group,drug_targets2)
View(drugs)
View(drug_group)
View(drug_targets2)
drugs <- merge(drug_group,drug_targets2, by="drugbank_id")
View(drugs)
View(drug_group)
View(drugs)
View(drug_targets2)
View(drug_uniprot)
View(drug_uniprot)
drug_uniprot <- drug_uniprot %>% rename(uniprot_ids = identifier)
drug_targets2 <- merge(drug_targets,drug_uniprot)
View(drug_targets2)
drugs <- merge(drug_group,drug_targets2, by="drugbank_id")
View(drugs)
View(drugs)
distinct(drugbank_all[, c(1,15)]) %>% dim(.) ## 26979
drugbank_all <- merge(drug_group,drug_targets2, by="drugbank_id")
distinct(drugbank_all[, c(1,15)]) %>% dim(.) ## 26979
distinct(drugbank_all[, c(1,5)]) %>% dim(.) ## 26979
distinct(drugbank_all[, c(1,8)]) %>% dim(.) ## 26979
distinct(drugbank_all[, c(1,10)]) %>% dim(.) ## 26979
length(unique(drugbank_all$drugbank_id)) ## 7919 drugs
length(unique(drugbank_all$uniprot_id)) ## 5004 drugs
View(drugbank_all)
drugbank_all2 <- drugbank_all[-(base::grep("withdrawn",drugbank_all$group)),] %>% .[(base::grep("^approved|approved,", .$group)),] %>%
.[(base::grep("yes", .$known_action)),] %>% .[.$organism == "Humans",]### version 5.1.8 from parser 2022
dim(drugbank_all2) ## 2690 combinations KDT-drug taken into account
length(unique(drugbank_all2$uniprot_id)) ## 718 Uniprot IDs filtered
?cpm
??cpm
library(edgeR)
library(BiocManager)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(genefu)
library(tidyverse)
library(hipathia)
library(dplyr)
genexp <- read.delim(file="./Raw_Data/GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_reads.gct", skip=2)
dim(genexp)
genexp1<-genexp[,-2]   #elimina la columna description
sum(duplicated(genexp1$Name))
rownames(genexp1)<-genexp1$Name
snames<-colnames(genexp1[,-1])
genexp2<-genexp1[,snames]
y<-DGEList(genexp2)
y_norm<-calcNormFactors(y, method = "TMM")
y_norm1 <- cpm(y_norm, log=T)
y_norm1<- y_norm1[1:100,1:200]
trans_data <- translate_data(y_norm1, "hsa")
exp_data <- normalize_data(trans_data)
pathways <- hipathia::load_pathways("hsa")
results <- hipathia(exp_data, pathways, decompose = FALSE, verbose=FALSE)
path_vals <- get_paths_data(results, matrix = TRUE)
norm_paths<-normalize_paths(path_vals, pathways)
View(norm_paths)
View(path_vals)
View(y_norm)
View(y_norm1)
View(trans_data)
View(y_norm1)
View(trans_data)
View(y_norm1)
View(path_vals)
View(norm_paths)
View(norm_paths)
?hipatia
View(pathways)
View(pathways)
View(y_norm1)
View(norm_paths)
View(y_norm1)
View(drugbank)
View(exp_data)
dim(clinical)
dim(genexp)
View(genexp)
dim(genexp)
sum(duplicated(genexp1$Name))
str(y)
DGEList()
?DGEList
?calcNormFactors
?cpm
?DGEList
?calcNormFactors
?cpm
?translate_data
str(norm_paths)
View(y_norm1)
?get_paths_data
View(drug_group)
View(drug_group)
?eg
?edgeR
library(edgeR)
if (!requireNamespace("edgeR", quietly=TRUE)){BiocManager::install("edgeR")}
library(edgeR)
?hipathia
?dbparser
